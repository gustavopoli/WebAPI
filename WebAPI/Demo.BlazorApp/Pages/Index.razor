@page "/"

@using Demo.ApiClient
@using Demo.ApiClient.Models.ApiModels
@inject DemoApiClientService apiClient

<h3>Products</h3>

<div class="card">
    <div class="card-body-p-0">
        <table class="table table-striped mb-0">
            <thread>
                <tr>
                    <th>Code</th>
                    <th>Name</th>
                    <th>Price</th>
                    <th></th>
                </tr>
            </thread>
            <tbody>
                <tr>
                    <td>
                        <input @bind="addProductModel.ProductCode" class="form-control" placeholder="Code"/>
                    </td>
                    <td>
                        <input @bind="addProductModel.ProductName" class="form-control" placeholder="Name" />
                    </td>
                    <td>
                        <input @bind="addProductModel.Price" class="form-control" placeholder="Price" />
                    </td>
                    <td>
                        <a @onclick="AddProduct" href="javascript:void(0)">Save</a>
                    </td>
                </tr>
                @if (products?.Any() ?? false){
                    @foreach(var product in products){
                        <tr>
                            <td>@product.ProductCode</td>
                            <td>@product.ProductName</td>
                            <td>@product.Price</td>
                            <td></td>
                        </tr>
                    }
                } else {
                    <tr>
                        <td class="text-center" colspan="3"> - No Products - </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private List<Product>? products;
    private Product addProductModel = new();

    private async Task LoadProducts(){
        products = await apiClient.GetProducts();
    }

    private async Task AddProduct(){
        await apiClient.SaveProduct(addProductModel);
        await LoadProducts();
        addProductModel = new();
    }

    private async Task EditProduct(Product product){
        await apiClient.UpdateProduct(product);
        await LoadProducts();
    }

    private async Task DeleteProduct(int id){
        await apiClient.DeleteProduct(id);
        await LoadProducts();
    }
}
